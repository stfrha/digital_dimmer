## Copyright (c) 2004 Xilinx, Inc. All Rights Reserved.
## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.
###################################################################
##
## Name     : opb_emc
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN opb_emc

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION LAST_UPDATED = 6.3.2
OPTION SIM_MODELS = BEHAVIORAL : STRUCTURAL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION CORE_STATE = DEPRECATED
OPTION IP_GROUP = MICROBLAZE:PPC:LOGICORE:MEMORY
OPTION ARCH_SUPPORT = qrvirtex2:qvirtex2:spartan2:spartan2e:spartan3:virtex:virtex2:virtex2p:virtex4:virtexe:spartan3e

IO_INTERFACE IO_IF = emc_0, IO_TYPE = XIL_EMC_V1

## Bus Interfaces
BUS_INTERFACE BUS = SOPB, BUS_STD = OPB, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_BANKS_MEM = 1, DT = integer range 1 to 8, IO_IF = emc_0, IO_IS = C_NUM_BANKS_MEM
PARAMETER C_INCLUDE_NEGEDGE_IOREGS = 0, DT = integer range 0 to 1
PARAMETER C_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0x200
PARAMETER C_HIGHADDR = 0x0000_0000, DT = std_logic_vector
PARAMETER C_MEM0_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, PERMIT = BASE_USER, DESC = Bank 0 Base Address, IO_IF = emc_0, IO_IS = C_MEM0_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=1)
PARAMETER C_MEM0_HIGHADDR = 0x0000_0000, DT = std_logic_vector, PERMIT = BASE_USER, DESC = Bank 0 High Address, IO_IF = emc_0, IO_IS = C_MEM0_HIGHADDR
PARAMETER C_MEM1_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, DESC = Bank 1 Base Address, IO_IF = emc_0, IO_IS = C_MEM1_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=2)
PARAMETER C_MEM1_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 1 High Address, IO_IF = emc_0, IO_IS = C_MEM1_HIGHADDR
PARAMETER C_MEM2_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, DESC = Bank 2 Base Address, IO_IF = emc_0, IO_IS = C_MEM2_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=3)
PARAMETER C_MEM2_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 2 High Address, IO_IF = emc_0, IO_IS = C_MEM2_HIGHADDR
PARAMETER C_MEM3_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, DESC = Bank 3 Base Address, IO_IF = emc_0, IO_IS = C_MEM3_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=4)
PARAMETER C_MEM3_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 3 High Address, IO_IF = emc_0, IO_IS = C_MEM3_HIGHADDR
PARAMETER C_MEM4_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, DESC = Bank 4 Base Address, IO_IF = emc_0, IO_IS = C_MEM4_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=5)
PARAMETER C_MEM4_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 4 High Address, IO_IF = emc_0, IO_IS = C_MEM4_HIGHADDR
PARAMETER C_MEM5_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, DESC = Bank 5 Base Address, IO_IF = emc_0, IO_IS = C_MEM5_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=6)
PARAMETER C_MEM5_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 5 High Address, IO_IF = emc_0, IO_IS = C_MEM5_HIGHADDR
PARAMETER C_MEM6_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, MIN_SIZE = 0, DESC = Bank 6 Base Address, IO_IF = emc_0, IO_IS = C_MEM6_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=7)
PARAMETER C_MEM6_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 6 High Address, IO_IF = emc_0, IO_IS = C_MEM6_HIGHADDR
PARAMETER C_MEM7_BASEADDR = 0xFFFF_FFFF, DT = std_logic_vector, DESC = Bank 7 Base Address, IO_IF = emc_0, IO_IS = C_MEM7_BASEADDR, ADDR_TYPE = MEMORY, CACHEABLE = TRUE, ISVALID = (C_NUM_BANKS_MEM>=8)
PARAMETER C_MEM7_HIGHADDR = 0x0000_0000, DT = std_logic_vector, DESC = Bank 7 High Address, IO_IF = emc_0, IO_IS = C_MEM7_HIGHADDR
PARAMETER C_MEM0_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), PERMIT = BASE_USER, DESC = Data Width, IO_IF = emc_0, IO_IS = C_MEM0_WIDTH
PARAMETER C_MEM1_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 1 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM1_WIDTH
PARAMETER C_MEM2_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 2 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM2_WIDTH
PARAMETER C_MEM3_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 3 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM3_WIDTH
PARAMETER C_MEM4_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 4 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM4_WIDTH
PARAMETER C_MEM5_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 5 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM5_WIDTH
PARAMETER C_MEM6_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 6 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM6_WIDTH
PARAMETER C_MEM7_WIDTH = 32, DT = integer, RANGE = (1:C_OPB_DWIDTH), DESC = Bank 7 Data Bus Width, IO_IF = emc_0, IO_IS = C_MEM7_WIDTH
PARAMETER C_MAX_MEM_WIDTH = 32, DT = integer, IO_IF = emc_0, IO_IS = C_MAX_MEM_WIDTH
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_0 = 1, DT = integer, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_0, PERMIT = BASE_USER, DESC = Match width of memory data bus to OPB data bus, VALUES = (0= FALSE , 1= TRUE )
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_1 = 1, DT = integer, DESC = Match data bus width of Mem Bank 1 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_1
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_2 = 1, DT = integer, DESC = Match data bus width of Mem Bank 2 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_2
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_3 = 1, DT = integer, DESC = Match data bus width of Mem Bank 3 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_3
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_4 = 1, DT = integer, DESC = Match data bus width of Mem Bank 4 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_4
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_5 = 1, DT = integer, DESC = Match data bus width of Mem Bank 5 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_5
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_6 = 1, DT = integer, DESC = Match data bus width of Mem Bank 6 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_6
PARAMETER C_INCLUDE_DATAWIDTH_MATCHING_7 = 1, DT = integer, DESC = Match data bus width of Mem Bank 7 to OPB, IO_IF = emc_0, IO_IS = C_INCLUDE_DATAWIDTH_MATCHING_7
PARAMETER C_SYNCH_MEM_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_0, PERMIT = BASE_USER, DESC = Memory Type, VALUES = (0= Asynchronous , 1= Synchronous )
PARAMETER C_SYNCH_PIPEDELAY_0 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_0
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_0
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_0
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_0
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_0
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_0
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_0 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_0
PARAMETER C_SYNCH_MEM_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_1
PARAMETER C_SYNCH_PIPEDELAY_1 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_1
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_1
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_1
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_1
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_1
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_1
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_1 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_1
PARAMETER C_SYNCH_MEM_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_2
PARAMETER C_SYNCH_PIPEDELAY_2 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_2
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_2
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_2
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_2
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_2
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_2
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_2 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_2
PARAMETER C_SYNCH_MEM_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_3
PARAMETER C_SYNCH_PIPEDELAY_3 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_3
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_3
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_3
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_3
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_3
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_3
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_3 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_3
PARAMETER C_SYNCH_MEM_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_4
PARAMETER C_SYNCH_PIPEDELAY_4 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_4
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_4
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_4
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_4
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_4
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_4
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_4 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_4
PARAMETER C_SYNCH_MEM_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_5
PARAMETER C_SYNCH_PIPEDELAY_5 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_5
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_5
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_5
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_5
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_5
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_5
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_5 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_5
PARAMETER C_SYNCH_MEM_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_6
PARAMETER C_SYNCH_PIPEDELAY_6 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_6
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_6
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_6
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_6
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_6
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_6
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_6 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_6
PARAMETER C_SYNCH_MEM_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_SYNCH_MEM_7
PARAMETER C_SYNCH_PIPEDELAY_7 = 2, DT = integer
PARAMETER C_READ_ADDR_TO_OUT_SLOW_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_SLOW_PS_7
PARAMETER C_WRITE_ADDR_TO_OUT_SLOW_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_SLOW_PS_7
PARAMETER C_WRITE_MIN_PULSE_WIDTH_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_MIN_PULSE_WIDTH_PS_7
PARAMETER C_READ_ADDR_TO_OUT_FAST_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_ADDR_TO_OUT_FAST_PS_7
PARAMETER C_WRITE_ADDR_TO_OUT_FAST_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_ADDR_TO_OUT_FAST_PS_7
PARAMETER C_READ_RECOVERY_BEFORE_WRITE_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_READ_RECOVERY_BEFORE_WRITE_PS_7
PARAMETER C_WRITE_RECOVERY_BEFORE_READ_PS_7 = 0, DT = integer, IO_IF = emc_0, IO_IS = C_WRITE_RECOVERY_BEFORE_READ_PS_7
PARAMETER C_OPB_DWIDTH = 32, DT = integer
PARAMETER C_OPB_AWIDTH = 32, DT = integer
PARAMETER C_OPB_CLK_PERIOD_PS = 10000, DT = integer, IO_IS = clk_freq
PARAMETER C_DEV_BLK_ID = 1, DT = INTEGER
PARAMETER C_DEV_MIR_ENABLE = 1, DT = INTEGER, IO_IF = emc_0, IO_IS = C_DEV_MIR_ENABLE

## Ports
PORT OPB_Clk = "", DIR = IN, BUS = SOPB, SIGIS = CLK
PORT OPB_Rst = OPB_Rst, DIR = IN, BUS = SOPB
PORT OPB_ABus = OPB_ABus, DIR = IN, VEC = [0:C_OPB_AWIDTH - 1 ], BUS = SOPB
PORT OPB_DBus = OPB_DBus, DIR = IN, VEC = [0:C_OPB_DWIDTH - 1 ], BUS = SOPB
PORT Sln_DBus = Sl_DBus, DIR = OUT, VEC = [0:C_OPB_DWIDTH - 1 ], BUS = SOPB
PORT OPB_select = OPB_select, DIR = IN, BUS = SOPB
PORT OPB_RNW = OPB_RNW, DIR = IN, BUS = SOPB
PORT OPB_seqAddr = OPB_seqAddr, DIR = IN, BUS = SOPB
PORT OPB_BE = OPB_BE, DIR = IN, VEC = [0:C_OPB_DWIDTH/8 - 1 ], BUS = SOPB
PORT Sln_xferAck = Sl_xferAck, DIR = OUT, BUS = SOPB
PORT Sln_errAck = Sl_errAck, DIR = OUT, BUS = SOPB
PORT Sln_toutSup = Sl_toutSup, DIR = OUT, BUS = SOPB
PORT Sln_retry = Sl_retry, DIR = OUT, BUS = SOPB
PORT Mem_A = "", DIR = OUT, VEC = [0:C_OPB_AWIDTH-1], PERMIT = BASE_USER, DESC = "Memory Address Bus", IO_IF = emc_0, IO_IS = emc_addr
PORT Mem_DQ = "", DIR = INOUT, VEC = [0:C_MAX_MEM_WIDTH-1], ENABLE = MULTI, PERMIT = BASE_USER, DESC = "Memory Data Bus", IO_IF = emc_0, IO_IS = emc_data
PORT Mem_CEN = "", DIR = OUT, VEC = [0:C_NUM_BANKS_MEM-1], PERMIT = BASE_USER, DESC = "Memory Chip Enable Active Low", IO_IF = emc_0, IO_IS = emc_csn
PORT Mem_OEN = "", DIR = OUT, VEC = [0:C_NUM_BANKS_MEM-1], PERMIT = BASE_USER, DESC = "Memory Output Enable", IO_IF = emc_0, IO_IS = emc_oen
PORT Mem_WEN = "", DIR = OUT, PERMIT = BASE_USER, DESC = "Memory Write Enable", IO_IF = emc_0, IO_IS = emc_wen
PORT Mem_QWEN = "", DIR = OUT, VEC = [0:C_MAX_MEM_WIDTH/8-1], PERMIT = BASE_USER, DESC = "Memory Qualified Write Enable"
PORT Mem_BEN = "", DIR = OUT, VEC = [0:C_MAX_MEM_WIDTH/8-1], PERMIT = BASE_USER, DESC = "Memory Byte Enable", IO_IF = emc_0, IO_IS = emc_ben
PORT Mem_RPN = "", DIR = OUT, PERMIT = BASE_USER, DESC = "Memory Reset/Power Down", IO_IF = emc_0, IO_IS = emc_rst
PORT Mem_CE = "", DIR = OUT, VEC = [0:C_NUM_BANKS_MEM-1], PERMIT = BASE_USER, DESC = "Memory Chip Enable Active High", IO_IF = emc_0, IO_IS = emc_ce
PORT Mem_ADV_LDN = "", DIR = OUT, PERMIT = BASE_USER, DESC = "Memory Advanced Burst Address/Load New Address", IO_IF = emc_0, IO_IS = emc_adv_ldn
PORT Mem_LBON = "", DIR = OUT, PERMIT = BASE_USER, DESC = "Memory Linear/Interleaved Burst Order"
PORT Mem_CKEN = "", DIR = OUT, PERMIT = BASE_USER, DESC = "Memory Clock Enable", IO_IF = emc_0, IO_IS = emc_cken
PORT Mem_RNW = "", DIR = OUT, PERMIT = BASE_USER, DESC = "Memory Read Not Write"

END
